import numpy as np
import matplotlib.pylab as plt
from scipy.signal import find_peaks
import pandas as pd
from datetime import datetime

def plotTimeSeries(data, key:list):
    fig = plt.figure(figsize=[30, 15])
    gs = fig.add_gridspec(3, 1)
    ax1 = fig.add_subplot(gs[0, 0])
    ax2 = fig.add_subplot(gs[1, 0])
    ax3 = fig.add_subplot(gs[2, 0])
    ax1.plot(data.Movuino[1:],'r')
    # ax2.plot(data.key[:0], data.key[:2], 'c')
    # ax3.plot(data.key[:0], data.key[:3], 'g')
# #plotting filtered data
# plt.plot(I[2])
# plt.show()
# plt.plot(I[3])
# plt.show()
# #plt.plot(I[2])
# #plt.plot(I[3])
# #plt.show()
#
# W = np.fft.fft(I[2])
# W = abs(W)
# V = W[1:]
# #print(W)
# #print(V)
# plt.plot(V)
# plt.show()
#
# X = np.fft.fft(I[3])
# X = abs(W)
# Y = X[1:]
# #print(W)
# #print(V)
# plt.plot(Y)
# plt.show()
#
# #plt.hist(H[2])
# #plt.figure()
# #plt.hist(H[3])
#
# h = np.array(H)
# h = h.astype(int)
# i = np.array(I)
# i = i.astype(int)
#
# x = h[2][10:]
# y = h[3][10:]
# z = i[2][25:]
# w = i[3][100:]
#
# peaks, properties = find_peaks(x[150:], threshold= 0,distance = 30, width = 10)
# properties["widths"]
# plt.plot(x[150:])
# plt.plot(peaks, x[150:][peaks], "x")
# plt.show()
#
# peaks, properties = find_peaks(y, distance = 30, width = 10)
# properties["widths"]
# plt.plot(y)
# plt.plot(peaks, y[peaks], "x")
# plt.show()
#
# peaks, properties = find_peaks(z, distance = 30, width = 10)
# properties["widths"]
# plt.plot(z)
# plt.plot(peaks, z[peaks], "x")
# plt.show()
#
# peaks, properties = find_peaks(w, distance = 30, width = 10)
# properties["widths"]
# plt.plot(w)
# plt.plot(peaks, w[peaks], "x")
# plt.show()

if __name__ == "__main__":
    key = ['Movuino', 'PolarOH1', 'PolarH10', 'Maxim']
    data = pd.read_csv('data.csv')
    # print(data.Movuino[0:][1])
    for i in range(1,len(data.Movuino[0:])):
        data.Movuino[0:][i] = pd.Timestamp(int(data.Movuino[0:][i]), unit='ms')
    for i in range(1,len(data.PolarOH1[0:])):
        data.PolarOH1[0:][i] = pd.Timestamp(int(data.PolarOH1[0:][i]), unit='ms')
    for i in range(1,len(data.PolarH10[0:])):
        data.PolarH10[0:][i] = pd.Timestamp(int(data.PolarH10[0:][i]), unit='ms')
    for i in range(1,len(data.Maxim[0:])):
        data.Maxim[0:][i] = pd.Timestamp(int(data.Maxim[0:][i]), unit='ms')
    plotTimeSeries(data,key)
    plt.show()